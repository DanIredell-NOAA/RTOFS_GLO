#!/bin/sh

export RUN_ENVIR=${RUN_ENVIR:-prod}

if [ $RUN_ENVIR != dev ]
then
$SMSBIN/smsinit $LOADL_STEP_ID 
fi

set -xa

#######################################
# Specify NET and RUN Name and model ID
#######################################
export NET=rtofs
export RUN=rtofs
export modID=glo
export RUN_MODE=analysis

####################
# SETUP RUN VARIABLES
####################
if [ $RUN_ENVIR = dev ]
then
  export job=${job:-${RUN}_${modID}_${RUN_MODE}_post_${projID}}
  export NNODES=${NNODES:-1}
  export NPROCS=${NPROCS:-4}
fi

# #################################
# SETUP SHELL  PROCESSING VARIABLES
# #################################
export PATH=$PATH:.
export PS4='$SECONDS + '
date

export mycyc='00'
export cycle=t${mycyc}z

##########################################################
# obtain unique process id (pid) and make temp directories
##########################################################
export pid=$$
if [ $RUN_ENVIR = dev ]
then
   tmpdir=${tmpdir:-/ptmp/$LOGNAME/tmpdir/${projID}}
else
   tmpdir=/tmpnwprd
fi
export DATA=$tmpdir/${RUN}_${modID}_${RUN_MODE}_post_${mycyc} ## ${job}.${pid}
test -d $DATA && rm -rf $DATA
mkdir -p $DATA
cd $DATA

##############################################
# temporary analysis and forecast directories
##############################################
export ANAL_DATA=$tmpdir/${RUN}_${modID}_analysis_${mycyc} ## .${pid}
#SEC inconsistent with anal, projID undefined export ANAL_DATA=$tmpdir/${RUN}_${modID}_analysis_${projID} ## .${pid}
export FCST_DATA1=$tmpdir/${RUN}_${modID}_forecast_step1_${mycyc} ## .${pid}
export FCST_DATA2=$tmpdir/${RUN}_${modID}_forecast_step2_${mycyc} ## .${pid}
#SEC inconsistent with forecast, projID undefined export FCST_DATA=$tmpdir/${RUN}_${modID}_forecast_${projID} ## .${pid}

####################################
# File To Log Msgs
####################################
if [ $RUN_ENVIR = dev ]
then
  export jlogfile=$HOMEout/logs/jlogfile
elif [ $RUN_ENVIR = prod ]
then
  export jlogfile=/com/logs/jlogfile
else
  export jlogfile=/com/logs/${envir}/jlogfile
fi
test -d `dirname $jlogfile` || mkdir -p $jlogfile


####################################
# Determine Job Output Name on System
####################################
export outid="LL$job"
export jobid="${outid}.o${pid}"
export pgmout="OUTPUT.${pid}"

export cycle=t${cyc}z

#####################################################
# SAVEGES - Copy files from TMPDIR ($DATA) to $GESdir
# SENDSMS - Flag events on SMS
# SENDCOM - Copy files from TMPDIR ($DATA) to $COMOUT
# SENDDBN - Issue DBNet client calls
# RERUN   - Rerun fcst from beginning (default no)
#####################################################
export SENDCOM=${SENDCOM:-YES}
export SENDDBN=${SENDDBN:-YES}
export SENDSMS=${SENDSMS:-YES}

####################################
# Specify Execution Areas
####################################
if [ $RUN_ENVIR = dev ]
then
  export HOMErtofs=${HOMErtofs:-/glocean/save/$LOGNAME/hycom_glo/projects/$projID}
else
  export HOMErtofs=/nw${envir}
fi
export EXECrtofs=${HOMErtofs}/exec
export PARMrtofs=${HOMErtofs}/parm
export FIXrtofs=${HOMErtofs}/fix
export USHrtofs=${HOMErtofs}/ush

#############################
# Set up the UTILITIES
##############################
export utilscript=/nwprod/util/ush
export utilexec=/nwprod/util/exec

#################################################################
# Run setup to initialize working directory and utility scripts
#################################################################
sh $utilscript/setup.sh

###########################################################
# Run setpdy and initialize PDY variables
# For any retrospecitve run, set the PDY in the SMS script
###########################################################
export PDY=${PDY:-}
sh $utilscript/setpdy.sh
. PDY

###################
# Define model gird
###################
export inputgrid=navy_0.08

##################################################################
# Run the config file to set up specific model variables if needed
##################################################################
. $PARMrtofs/${RUN}_${modID}.${inputgrid}.config

##############################################
# Define Input/Output/Restart directories
##############################################
if [ $RUN_ENVIR = dev ]
then
  export COMIN=${COMIN:-${HOMEout}/${NET}/${RUN}.${PDY}}
  export COMOUT=${COMOUT:-${HOMEout}/${NET}/${RUN}.${PDY}}
  export GESdir=${HOMEout}/${NET}/nwges/${RUN}.${PDY}
else
  export COMIN=/com/${NET}/${envir}/${RUN}.${PDY}
  export COMOUT=/com/${NET}/${envir}/${RUN}.${PDY}
  export GESdir=/nwges/${envir}/${RUN}.${PDY}
fi
mkdir -m 775 -p $COMOUT
test -d $GESdir || mkdir -p $GESdir
test -d $COMOUT || mkdir -p $COMOUT

################################################################
# Send a message to the jlogfile indicating the start of the job
################################################################
msg="HAS BEGUN on `hostname`"
postmsg "$jlogfile" "$msg"

####################
# execute the script
####################
ksh ${HOMErtofs}/scripts/exrtofs_glo_post.sh.sms

cat $pgmout
cp -p $pgmout $COMOUT/${RUN}_${modID}.t${cyc}z.post.`basename $pgmout`

msg="JOB $job HAS COMPLETED NORMALLY." 
postmsg "$jlogfile" "$msg"


cd $tmpdir
### test -d ${ANAL_DATA} && rm -rf ${ANAL_DATA} 
### test -d ${FCST_DATA1} && rm -rf ${FCST_DATA1} 
### test -d ${FCST_DATA2} && rm -rf ${FCST_DATA2} 
### rm -rf $DATA

date

if [ $RUN_ENVIR != dev ]
then
  $SMSBIN/smscomplete
fi
