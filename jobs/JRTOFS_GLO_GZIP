#!/bin/sh

export RUN_ENVIR=${RUN_ENVIR:-prod}

set -xa

#######################################
# Specify NET and RUN Name and model ID
#######################################
export NET=rtofs
export RUN=rtofs
export modID=glo
export RUN_MODE=gzip
export GZIP_FILES=${GZIP_FILES:-}
export HOMErtofs=${HOMErtofs:-/nw${envir}/rtofs_glo.${model_ver}}

# #################################
# SETUP SHELL  PROCESSING VARIABLES
# #################################
export PATH=$PATH:.
export PS4='$SECONDS + '
date

##########################################################
# obtain unique process id (pid) and make temp directories
##########################################################
export pid=$$
export DATA=/tmpnwprd1/${job}.${pid}
test -d $DATA && rm -rf $DATA
mkdir -p $DATA
cd $DATA

if [ $envir = prod ]; then
  export jlogfile=/com/logs/jlogfiles/jlogfile.${job}.${pid}
else
  export DBNROOT=/nwprod/spa_util/fakedbn
  export jlogfile=/com/logs/${envir}/jlogfiles
fi

test -d `dirname $jlogfile` || mkdir -p $jlogfile

####################################
# Determine Job Output Name on System
####################################
export outid="LL$job"
export jobid="${outid}.o${pid}"
export pgmout="OUTPUT.${pid}"
export cycle=t${cyc}z
export CYC=$cyc

#####################################################
# SAVEGES - Copy files from TMPDIR ($DATA) to $GESdir
# SENDECF - Flag events on ECF
# SENDCOM - Copy files from TMPDIR ($DATA) to $COMOUT
# SENDDBN - Issue DBNet client calls
# RERUN   - Rerun fcst from beginning (default no)
#####################################################
export SENDCOM=${SENDCOM:-YES}
export SENDDBN=${SENDDBN:-YES}
export SENDECF=${SENDECF:-YES}

#############################
# Set up the UTILITIES
##############################
export utilscript=/nwprod/util/ush
export utilexec=/nwprod/util/exec

#################################################################
# Run setup to initialize working directory and utility scripts
#################################################################
sh $utilscript/setup.sh

###########################################################
# Run setpdy and initialize PDY variables
# For any retrospecitve run, set the PDY in the ECF script
###########################################################
export PDY=${PDY:-}
sh $utilscript/setpdy.sh
. PDY

################################################################
# Send a message to the jlogfile indicating the start of the job
################################################################
msg="HAS BEGUN on `hostname`"
postmsg "$jlogfile" "$msg"

####################
# execute the script
####################
${HOMErtofs}/scripts/exrtofs_glo_gzip.sh.ecf
export err=$?; err_chk

msg="JOB $job HAS COMPLETED NORMALLY." 
postmsg "$jlogfile" "$msg"

cd $tmpdir

date
