
SHELL           	=       /bin/sh

# Listing of options that are usually independent of machine type.
# When necessary, these are over-ridden by each architecture.

ARFLAGS			=	-X64

#### Architecture specific settings ####

# Settings for Linux x86_64, IBM POE, Intel compiler	 (dmpar)#
LDFLAGS        =   -Wl,-noinhibit-exec -i_dynamic

BYTE_ORDER     =   LITTLE_ENDIAN
SFC            =   ifort
SF90           =   ifort -free
SCC            =   icc
FFLAGS=-q64 -O3 -fp-model precise -assume byterecl -convert big_endian -DLINUX
FFLAGS=-q64 -O3 -msse2 -DLINUX
DEBUG_FLAGS    =   -O0 -g -traceback -fpe0
FFLAGS_DOUBLE  =   -q64
FFLAGS_SINGLE  =   -q32
CPP            =   /lib/cpp
CPPFLAGS       =   -C -P -D$(BYTE_ORDER) -traditional-cpp -DLINUX
CPPFLAGSnotrad       =   -C -P -D$(BYTE_ORDER) -DLINUX
ARFLAGS        =   -ruv

DM_FC          =   mpfort
DM_F90         =   mpfort -free
DM_CC          =   mpcc
DM_LDFLAGS     =  $(LD_FLAGS) -L$(MPI_ROOT)/lib
DM_FFLAGS      =  $(FFLAGS) -I$(MPI_ROOT)/include
DM_CFLAGS      =  $(CFLAGS) -I$(MPI_ROOT)/include

FC             =   $(DM_FC)
F90            =   $(DM_F90)
CC             =   $(DM_CC)

CFLAGS         =

ESSLLIB        =   -mkl=sequential

LIB_TEMP_LOCATION = ../../lib/sorc/ofs_mods
LIB_NWPROD_LOCATION = /nwprod/lib/


##################################################################
#
#	Macros, these should be generic for all machines

LN		=	ln -sf
MAKE		=	make -i -r
RM		= 	/bin/rm -f
CP		= 	/bin/cp
MV		= 	/bin/mv
AR		=	ar 
MKDIR           =       /bin/mkdir -p
RANLIB          =       ranlib


.IGNORE:
.SUFFIXES: .c .f .F .F90 .f90 .o

#	There is probably no reason to modify these rules

.c.o:
	$(RM) $@
	$(CC) $(CFLAGS2) -c $<	

.f.o:
	$(RM) $@ $*.mod
	$(FC) $(FFLAGS) -c $< 

.F.o:
	$(RM) $@ $*.mod
	$(CPP) $(CPPFLAGS) $(FDEFS)  $< > $<.f
	$(FC) $(FFLAGS) -c $<.f
	$(MV) $<.o $*.o
#	$(RM) $<.f

.F90.o:
	$(RM) $@ $*.mod
	$(CPP) $(CPPFLAGS) $(FDEFS)  $< > $*.f90
	$(F90) $(FFLAGS) -c $*.f90 
	$(RM) $*.f90

.f90.o:
	$(RM) $@ $*.mod
	$(F90) $(FFLAGS) -c $< 
